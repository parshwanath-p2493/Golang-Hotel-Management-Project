{
    "swagger": "2.0",
    "info": {
        "description": "Your API documentation",
        "title": "My API",
        "version": "1.0.0"
    },
    "host": "localhost:2493",
    "basePath": "/",
    "paths": {
        "/admin/signup": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin Signup",
                "description": "Admin user signs up for the system",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "body",
                        "description": "Admin Signup Details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin created successfully",
                        "schema": {
                            "$ref": "#/definitions/AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin Login",
                "description": "Admin user logs in to the system",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "body",
                        "description": "Admin Login Details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/logout": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin Logout",
                "description": "Admin user logs out from the system",
                "parameters": [
                    {
                        "name": "admin",
                        "in": "body",
                        "description": "Admin logout Details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/guest/bookhotel": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new booking",
                "description": "Create a new booking for a room",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "body",
                        "description": "Booking details to create a new booking",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking created successfully",
                        "schema": {
                            "$ref": "#/definitions/BookingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid booking data"
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "409": {
                        "description": "Room already occupied"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/manager/getallbookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get all bookings",
                "description": "Retrieve all bookings with optional sorting",
                "parameters": [
                    {
                        "name": "sortbytime",
                        "in": "query",
                        "description": "Sort bookings by time (asc/desc)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookings retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/BookingListResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to retrieve bookings"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/bookings/{id}/status": {
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Update booking status",
                "description": "Update the status of a booking (approved/rejected)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Booking status (approved/rejected)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/BookingStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/approve": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Approve a booking",
                "description": "Approve a booking by updating the status to 'Confirmed'",
                "parameters": [
                    {
                        "name": "managerID",
                        "in": "query",
                        "description": "Manager's ID for validation",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bookingID",
                        "in": "query",
                        "description": "Booking ID to approve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking approved successfully",
                        "schema": {
                            "$ref": "#/definitions/BookingStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Missing bookingID or managerID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/reject": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Reject a booking",
                "description": "Reject a booking by updating the status to 'Rejected'",
                "parameters": [
                    {
                        "name": "managerID",
                        "in": "query",
                        "description": "Manager's ID for validation",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bookingID",
                        "in": "query",
                        "description": "Booking ID to reject",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking rejected successfully",
                        "schema": {
                            "$ref": "#/definitions/BookingStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Missing bookingID or managerID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/guest/signup": {
            "post": {
                "tags": [
                    "guest"
                ],
                "summary": "Guest Signup",
                "description": "Register a new guest",
                "parameters": [
                    {
                        "name": "guest",
                        "in": "body",
                        "description": "Guest Signup Details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guest created successfully",
                        "schema": {
                            "$ref": "#/definitions/GuestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/guest/login": {
            "post": {
                "tags": [
                    "guest"
                ],
                "summary": "Guest Login",
                "description": "Authenticate guest user",
                "parameters": [
                    {
                        "name": "guest",
                        "in": "body",
                        "description": "Guest login credentials",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guest logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/GuestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - incorrect credentials"
                    },
                    "404": {
                        "description": "Guest not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/guest/logout": {
            "post": {
                "tags": [
                    "guest"
                ],
                "summary": "Guest Logout",
                "description": "Logs out the guest by invalidating the session token",
                "responses": {
                    "200": {
                        "description": "Guest logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/GuestLogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing token"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/guest/getallguests": {
            "get": {
                "tags": [
                    "guest"
                ],
                "summary": "Get All Guests",
                "description": "Retrieve all guest users from the database",
                "responses": {
                    "200": {
                        "description": "List of guests retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Guest"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminfood/addfood": {
            "post": {
                "tags": [
                    "food"
                ],
                "summary": "Add new food item (Admin only)",
                "description": "Allows an admin to add a new food item to the system.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "food",
                        "description": "Food item details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Food"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Food item created successfully"
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminfood/getall": {
            "get": {
                "tags": [
                    "food"
                ],
                "summary": "Retrieve food items (Admin only)",
                "description": "Fetches all food items. Supports filtering by category, price, and sorting by price.",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "type": "string",
                        "description": "Filter by category"
                    },
                    {
                        "name": "sortByPrice",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "description": "Sort by price ascending or descending"
                    },
                    {
                        "name": "pricein",
                        "in": "query",
                        "type": "string",
                        "description": "Comma-separated price values to include"
                    },
                    {
                        "name": "pricenin",
                        "in": "query",
                        "type": "string",
                        "description": "Comma-separated price values to exclude"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Limit of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of food items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Food"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminfood/filter/{category_name}/{food_name}": {
            "patch": {
                "tags": [
                    "food"
                ],
                "summary": "Update a food item (Admin only)",
                "description": "Allows admin to update food item details by category and name.",
                "parameters": [
                    {
                        "name": "category_name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "food_name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "food",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Food item updated successfully"
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "404": {
                        "description": "Food item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminfood/delete/{category_name}/{food_name}": {
            "delete": {
                "tags": [
                    "food"
                ],
                "summary": "Delete a food item (Admin only)",
                "description": "Deletes a food item identified by category and name.",
                "parameters": [
                    {
                        "name": "category_name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "food_name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Food item deleted successfully"
                    },
                    "404": {
                        "description": "Food item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/rooms/all": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Get all rooms",
                "description": "Retrieve all rooms available in the system.",
                "responses": {
                    "200": {
                        "description": "List of rooms retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Room"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/rooms/types": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Filter rooms by capacity, type, and price",
                "description": "Filter and retrieve rooms based on capacity, room type, and price range.",
                "parameters": [
                    {
                        "name": "capacity",
                        "in": "query",
                        "type": "string",
                        "description": "Filter rooms by capacity"
                    },
                    {
                        "name": "room_type",
                        "in": "query",
                        "type": "string",
                        "description": "Filter rooms by type"
                    },
                    {
                        "name": "sortByPrice",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "description": "Sort rooms by price (ascending or descending)"
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "type": "string",
                        "description": "Minimum price for filtering"
                    },
                    {
                        "name": "max-price",
                        "in": "query",
                        "type": "string",
                        "description": "Maximum price for filtering"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "type": "integer",
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Limit of rooms per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of rooms based on the filters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Room"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminrooms/addroom": {
            "post": {
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Add a new room (Admin only)",
                "description": "Allows an admin to add a new room to the system.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "room",
                        "description": "Room details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Room"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Room added successfully"
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/adminrooms/delete/{room_number}": {
            "delete": {
                "tags": [
                    "admin-rooms"
                ],
                "summary": "Delete a room (Admin only)",
                "description": "Allows an admin to delete a room by its room number.",
                "parameters": [
                    {
                        "name": "room_number",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Room number to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted successfully"
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/managerrooms/addroom": {
            "post": {
                "tags": [
                    "manager-rooms"
                ],
                "summary": "Add a new room (Manager only)",
                "description": "Allows a manager to add a new room to the system.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "room",
                        "description": "Room details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Room"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Room added successfully"
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/managerrooms/delete/{room_number}": {
            "delete": {
                "tags": [
                    "manager-rooms"
                ],
                "summary": "Delete a room (Manager only)",
                "description": "Allows a manager to delete a room by its room number.",
                "parameters": [
                    {
                        "name": "room_number",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Room number to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted successfully"
                    },
                    "404": {
                        "description": "Room not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "definitions": {
            "Admin": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "AdminResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    }
                }
            }
        },
        "Booking": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "guest_id": {
                    "type": "string"
                },
                "room_number": {
                    "type": "string"
                },
                "number_of_guests": {
                    "type": "integer",
                    "example": 2
                },
                "food_items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_time": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BookingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/Booking"
                }
            }
        },
        "BookingListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Booking"
                    }
                }
            }
        },
        "BookingStatusResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "string",
                    "example": "Booking status updated successfully"
                }
            }
        },
        "Food": {
            "type": "object",
            "properties": {
                "food_id": {
                    "type": "string"
                },
                "item_name": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                },
                "vegornonveg": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "created_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "flag": {
                    "type": "string",
                    "enum": [
                        "green",
                        "red"
                    ]
                }
            }
        },
        "FoodResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/Food"
                }
            }
        },
        "FoodListResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Food"
                    }
                }
            }
        },
        "Guest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "first_name"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "GuestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/Guest"
                }
            }
        },
        "GuestLogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Room": {
            "type": "object",
            "properties": {
                "room_id": {
                    "type": "string",
                    "description": "Unique identifier for the room"
                },
                "room_number": {
                    "type": "integer",
                    "description": "The room number"
                },
                "room_type": {
                    "type": "string",
                    "description": "Type of the room (e.g., Single, Double)"
                },
                "capacity": {
                    "type": "integer",
                    "description": "Maximum number of people the room can accommodate"
                },
                "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of the room per night"
                },
                "availability_status": {
                    "type": "string",
                    "enum": [
                        "Available",
                        "Booked",
                        "Unavailable"
                    ],
                    "description": "Availability status of the room"
                },
                "created_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the room was created"
                },
                "updated_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the room was last updated"
                }
            }
        }
    }
}